r <- data.frame(covariates[[5]])
r[r==-9] <- NA
colnames(r) <- Y_names_R
r <- r[1:nyr,keep.these.R]
# Since Walleye pollock YOY is lagged, correct it so it matches the actual year
r$'GOA walleye pollock age 1'[2:nyr] <- r$'GOA walleye pollock age 1'[1:(nyr-1)]
r$'GOA walleye pollock age 1'[1] <- 12504 # 2017 stock assessment estimate for 1980
covariates <- bind_cols(m,r)
# Custom reorder
#covariates <- covariates[,ordered.names]
# covariates <- covariates[,c(1,2,3,5,17,9,4,
#                             12,11,18,6,13,
#                             7,8,15,10,19,16,14,
#                             23,24,20,21,22)]
years <- c(1980,(1980+nyr-1))
Y <- unique(covariates,MARGIN=2)
Y <- apply(Y,2,function(x) (x-mean(x[1:nyr_tobefit],na.rm=TRUE))/sd(x[1:nyr_tobefit],na.rm=TRUE))
n <- ncol(Y)
par(mfrow=c(1,3),
mar=c(1,2,0,1),
oma = c(1, 1, 1,1))
ylabel <- expression("Pre-fishery run biomass, " ~ 10^{3} ~ " mt")
row.level <- 7
ylimits <- c(0.5,row.level+0.5)
range.lim <- c(-3,4.5)
for(i in 1:n){
if(i==1|i==(row.level+1)|i==(row.level*2+1)|i==(row.level*3+1)){
plot(x=1:nrow(Y),ylab=NA,
xlab=NA,ylim=ylimits,
xlim=years,type="n",
xaxs="i",yaxs="i",bty="n",yaxt="n",xaxt="n")
#axis(2,at=ylimits,labels=NA)
par(mgp=c(1, 0.5, 0))
abline(v=2012)
axis(1,at=c(seq(years[1],years[2],by=5),2017),labels=TRUE,tcl=-0.25,las=1,cex.axis=1.2)
j <- 1
}
y1 <- (Y[,i]-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
minus1.sd <- (-1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
mean.value <- (-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
plus1.sd <- (1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
segments(1980,minus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,minus1.sd,1980,minus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,plus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
text(x=1979,y=minus1.sd,labels="-1",adj=c(1,1),cex=1.2,xpd=NA)
text(x=1979,y=plus1.sd,labels="+1",adj=c(1,0),cex=1.2,xpd=NA)
abline(h=mean.value,lty=2,lwd=0.8,col="grey50")
lines(years[1]:years[2], y1, type = "l", lty=1,lwd = 2,col="black")
points(years[1]:years[2], y1, pch=21, cex=0.6, lwd=1,col="black",bg="white",xpd=NA)
text(x=1979,y=j+0.4,labels=colnames(Y)[i],pos=4,cex=1.5,xpd=NA)
j <- j+1
}
match.with.process <- c(rep("Mortality",length(keep.these.M)),
rep("Both",2),
rep("Recruitment",length(keep.these.r)-2))
match.with.process <- c(rep("Mortality",length(keep.these.M)),
rep("Both",2),
rep("Recruitment",length(keep.these.R)-2))
View(covariates)
# plot_covariate_ts.r
# Created by John Trochta
# Date modified:  11/13/2019
# Summary:
# This script plots the time series of the covariates used in my Bayesian model selection chapter
# Originally created/used for 2019 AMSS poster
# This was most recently edited for 2019 GSS
library(ggplot2)
library(dplyr)
library(R2admb)
function_dir <- "~/Thesis/ASA/2018/R_code_for_plotting_output/"
source(file=paste0(function_dir,"function_data_reader.R"))
source(file=paste0(function_dir,"function_data_header_reader.R"))
basePath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/code/2020_01_all fixed mortality effects/Null_model/")
modelPath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/code/2020_01_all fixed mortality effects/Null_model/")
resultsPath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/")
#resultsPath <- paste0("~/PWS_herring/Thesis/Model/ASA/2018/From Whitefish/Current/FIGURES_&_TABLES/")
# MAKE SURE TO CHANGE THESE IF CHANGED IN ADMB FILES
nage <- 10
nyr_tobefit <- 33
n_age0_covs <- 8
#n_age0_covs <- 1
n_mor_covs <- 32
nyr <- 39
variable.names <- c(  'VHSV_age3_4_mort_93',
'ICH_age5_8_mort_93',
'Z_0_8',
'Z_9',
'Z_0_8offset',
'Z_9offset',
'matur_age3_per1',
'matur_age4_per1',
'matur_age3_per2',
'matur_age4_per2',
'alpha_maturity_prespawn',
'beta_maturity_prespawn',
'alpha_v',
'beta_v',
'survey_vul_alpha',
'survey_vul_beta',
paste0('loginit_pop',1:5),
'egg_add',
'logmdm_c',
'm_add',
'hydADFG_q',
'hydADFG_add',
'hydPWSSC_q',
'hydPWSSC_add',
paste0('annual_age0devs',1:nyr_tobefit),
'log_MeanAge0',
'Mean_Age0offset',
'sigma_age0devs',
# paste0('beta_age0',1:n_age0_covs),
# paste0('beta_mortality',1:n_mor_covs),
'beta_age0',
'beta_mortality',
paste0('annual_mortdevs',1:nyr_tobefit),
'sigma_mortdevs',
#paste0('beta_age0_offset',1:n_age0_covs),
#paste0('beta_mortality_offset',1:n_mor_covs),
'beta_age0_offset',
'beta_mortality_offset',
'sigma_age0covar',
'sigma_morcovar')
#####################################################################################
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector <- sample(col_vector,n)
# PLOT TIME SERIES
Y_names_M <- c("I. hoferi pre-2007",
"I. hoferi post-2007",
"VHSV",
"Summer upwelling",
"Summer PDO",
"Winter PDO",
'Summer NPGO',
'Winter NPGO',
'March seabird counts',
'Total pink salmon returns',
'GOA walleye pollock Total biomass',
'GOA walleye pollock SSB',
'GOA Pacific cod SB',
'GOA Arrowtooth flounder female SB',
'GOA Pacific cod SB',
"Humpback whale numbers",
'Total pink salmon returns',
'PWS freshwater discharge',
"PWS Avg. Zooplankton density '81-'99",
"PWS Total Zooplankton density '00-'12")
Y_names_R <- c("Pulse-recovery event",
"1989 regime shift",
"1989 trending regime shift",
"Hatchery-released juvenile pink salmon",
"GOA walleye pollock age 1",
'Winter NPGO',
'Winter PDO',
'Age 0 scale growth',
'PWS freshwater discharge',
"PWS Avg. Zooplankton density '81-'99",
"PWS Total Zooplankton density '00-'12")
# ordered.names <- c(Y_names_M,Y_names_R)[c(3,2,1,5,14,4,
#                                           32,28,18,12,8,30,
#                                           20,6,31,27,
#                                           35,34,33,39,38)]
keep.these.M <- c(1:5,7,10,12:14,16)
keep.these.R <- c(6,7,2,4,5,8,9,10,11)
match.with.process <- c(rep("Mortality",length(keep.these.M)),
rep("Both",2),
rep("Recruitment",length(keep.these.R)-2))
filename <- paste0(modelPath,"PWS_ASA(covariate).ctl")
covariates <- data_reader(filename=filename)
m <- data.frame(covariates[[12]])
m[m==-9] <- NA
colnames(m) <- Y_names_M
m <- m[1:nyr,keep.these.M]
r <- data.frame(covariates[[5]])
r[r==-9] <- NA
colnames(r) <- Y_names_R
r <- r[1:nyr,keep.these.R]
# Since Walleye pollock YOY is lagged, correct it so it matches the actual year
r$'GOA walleye pollock age 1'[2:nyr] <- r$'GOA walleye pollock age 1'[1:(nyr-1)]
r$'GOA walleye pollock age 1'[1] <- 12504 # 2017 stock assessment estimate for 1980
covariates <- bind_cols(m,r)
# plot_covariate_ts.r
# Created by John Trochta
# Date modified:  11/13/2019
# Summary:
# This script plots the time series of the covariates used in my Bayesian model selection chapter
# Originally created/used for 2019 AMSS poster
# This was most recently edited for 2019 GSS
library(ggplot2)
library(dplyr)
library(R2admb)
function_dir <- "~/Thesis/ASA/2018/R_code_for_plotting_output/"
source(file=paste0(function_dir,"function_data_reader.R"))
source(file=paste0(function_dir,"function_data_header_reader.R"))
basePath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/code/2020_01_all fixed mortality effects/Null_model/")
modelPath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/code/2020_01_all fixed mortality effects/Null_model/")
resultsPath <- paste0("~/Meetings, talks, and conferences/2020_01_AMSS/")
#resultsPath <- paste0("~/PWS_herring/Thesis/Model/ASA/2018/From Whitefish/Current/FIGURES_&_TABLES/")
# MAKE SURE TO CHANGE THESE IF CHANGED IN ADMB FILES
nage <- 10
nyr_tobefit <- 33
n_age0_covs <- 8
#n_age0_covs <- 1
n_mor_covs <- 32
nyr <- 39
variable.names <- c(  'VHSV_age3_4_mort_93',
'ICH_age5_8_mort_93',
'Z_0_8',
'Z_9',
'Z_0_8offset',
'Z_9offset',
'matur_age3_per1',
'matur_age4_per1',
'matur_age3_per2',
'matur_age4_per2',
'alpha_maturity_prespawn',
'beta_maturity_prespawn',
'alpha_v',
'beta_v',
'survey_vul_alpha',
'survey_vul_beta',
paste0('loginit_pop',1:5),
'egg_add',
'logmdm_c',
'm_add',
'hydADFG_q',
'hydADFG_add',
'hydPWSSC_q',
'hydPWSSC_add',
paste0('annual_age0devs',1:nyr_tobefit),
'log_MeanAge0',
'Mean_Age0offset',
'sigma_age0devs',
# paste0('beta_age0',1:n_age0_covs),
# paste0('beta_mortality',1:n_mor_covs),
'beta_age0',
'beta_mortality',
paste0('annual_mortdevs',1:nyr_tobefit),
'sigma_mortdevs',
#paste0('beta_age0_offset',1:n_age0_covs),
#paste0('beta_mortality_offset',1:n_mor_covs),
'beta_age0_offset',
'beta_mortality_offset',
'sigma_age0covar',
'sigma_morcovar')
#####################################################################################
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector <- sample(col_vector,n)
# PLOT TIME SERIES
Y_names_M <- c("I. hoferi pre-2007",
"I. hoferi post-2007",
"VHSV",
"Summer upwelling",
"Summer PDO",
"Winter PDO",
'Summer NPGO',
'Winter NPGO',
'March seabird counts',
'Total pink salmon returns',
'GOA walleye pollock Total biomass',
'GOA walleye pollock SSB',
'GOA Pacific cod SB',
'GOA Arrowtooth flounder female SB',
'GOA Pacific cod SB',
"Humpback whale numbers",
'Total pink salmon returns',
'PWS freshwater discharge',
"PWS Avg. Zooplankton density '81-'99",
"PWS Total Zooplankton density '00-'12")
Y_names_R <- c("Pulse-recovery event",
"1989 regime shift",
"1989 trending regime shift",
"Hatchery-released juvenile pink salmon",
"GOA walleye pollock age 1",
'Winter NPGO',
'Winter PDO',
'Age 0 scale growth',
'PWS freshwater discharge',
"PWS Avg. Zooplankton density '81-'99",
"PWS Total Zooplankton density '00-'12")
# ordered.names <- c(Y_names_M,Y_names_R)[c(3,2,1,5,14,4,
#                                           32,28,18,12,8,30,
#                                           20,6,31,27,
#                                           35,34,33,39,38)]
keep.these.M <- c(1:5,7,10,12:14,16)
keep.these.R <- c(6,7,2,4,5,8,9,10,11)
match.with.process <- c(rep("Mortality",length(keep.these.M)),
rep("Both",2),
rep("Recruitment",length(keep.these.R)-2))
filename <- paste0(modelPath,"PWS_ASA(covariate).ctl")
covariates <- data_reader(filename=filename)
m <- data.frame(covariates[[12]])
m[m==-9] <- NA
colnames(m) <- Y_names_M
m <- m[1:nyr,keep.these.M]
r <- data.frame(covariates[[5]])
r[r==-9] <- NA
colnames(r) <- Y_names_R
r <- r[1:nyr,keep.these.R]
# Since Walleye pollock YOY is lagged, correct it so it matches the actual year
r$'GOA walleye pollock age 1'[2:nyr] <- r$'GOA walleye pollock age 1'[1:(nyr-1)]
r$'GOA walleye pollock age 1'[1] <- 12504 # 2017 stock assessment estimate for 1980
covariates <- bind_cols(m,r)
# Custom reorder
#covariates <- covariates[,ordered.names]
# covariates <- covariates[,c(1,2,3,5,17,9,4,
#                             12,11,18,6,13,
#                             7,8,15,10,19,16,14,
#                             23,24,20,21,22)]
years <- c(1980,(1980+nyr-1))
Y <- unique(covariates,MARGIN=2)
Y <- apply(Y,2,function(x) (x-mean(x[1:nyr_tobefit],na.rm=TRUE))/sd(x[1:nyr_tobefit],na.rm=TRUE))
n <- ncol(Y)
par(mfrow=c(1,3),
mar=c(1,2,0,1),
oma = c(1, 1, 1,1))
ylabel <- expression("Pre-fishery run biomass, " ~ 10^{3} ~ " mt")
row.level <- 7
ylimits <- c(0.5,row.level+0.5)
range.lim <- c(-3,4.5)
for(i in 1:n){
if(i==1|i==(row.level+1)|i==(row.level*2+1)|i==(row.level*3+1)){
plot(x=1:nrow(Y),ylab=NA,
xlab=NA,ylim=ylimits,
xlim=years,type="n",
xaxs="i",yaxs="i",bty="n",yaxt="n",xaxt="n")
#axis(2,at=ylimits,labels=NA)
par(mgp=c(1, 0.5, 0))
abline(v=2012)
axis(1,at=c(seq(years[1],years[2],by=5),2017),labels=TRUE,tcl=-0.25,las=1,cex.axis=1.2)
j <- 1
}
y1 <- (Y[,i]-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
minus1.sd <- (-1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
mean.value <- (-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
plus1.sd <- (1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
segments(1980,minus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,minus1.sd,1980,minus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,plus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
text(x=1979,y=minus1.sd,labels="-1",adj=c(1,1),cex=1.2,xpd=NA)
text(x=1979,y=plus1.sd,labels="+1",adj=c(1,0),cex=1.2,xpd=NA)
abline(h=mean.value,lty=2,lwd=0.8,col="grey50")
line.color <- ifelse(match.with.process[i]=="mortality","blue",
ifelse(match.with.process[i]=="recruitment","firebrick1",
"purple"))
lines(years[1]:years[2], y1, type = "l", lty=1,lwd = 2,col=line.color)
points(years[1]:years[2], y1, pch=21, cex=0.6, lwd=1,col=line.color,bg="white",xpd=NA)
text(x=1979,y=j+0.4,labels=colnames(Y)[i],pos=4,cex=1.5,xpd=NA)
j <- j+1
}
par(mfrow=c(1,3),
mar=c(1,2,0,1),
oma = c(1, 1, 1,1))
ylabel <- expression("Pre-fishery run biomass, " ~ 10^{3} ~ " mt")
row.level <- 7
ylimits <- c(0.5,row.level+0.5)
range.lim <- c(-3,4.5)
for(i in 1:n){
if(i==1|i==(row.level+1)|i==(row.level*2+1)|i==(row.level*3+1)){
plot(x=1:nrow(Y),ylab=NA,
xlab=NA,ylim=ylimits,
xlim=years,type="n",
xaxs="i",yaxs="i",bty="n",yaxt="n",xaxt="n")
#axis(2,at=ylimits,labels=NA)
par(mgp=c(1, 0.5, 0))
abline(v=2012)
axis(1,at=c(seq(years[1],years[2],by=5),2017),labels=TRUE,tcl=-0.25,las=1,cex.axis=1.2)
j <- 1
}
y1 <- (Y[,i]-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
minus1.sd <- (-1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
mean.value <- (-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
plus1.sd <- (1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
segments(1980,minus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,minus1.sd,1980,minus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,plus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
text(x=1979,y=minus1.sd,labels="-1",adj=c(1,1),cex=1.2,xpd=NA)
text(x=1979,y=plus1.sd,labels="+1",adj=c(1,0),cex=1.2,xpd=NA)
abline(h=mean.value,lty=2,lwd=0.8,col="grey50")
line.color <- ifelse(match.with.process[i]=="Mortality","blue",
ifelse(match.with.process[i]=="Recruitment","firebrick1",
"purple"))
lines(years[1]:years[2], y1, type = "l", lty=1,lwd = 2,col=line.color)
points(years[1]:years[2], y1, pch=21, cex=0.6, lwd=1,col=line.color,bg="white",xpd=NA)
text(x=1979,y=j+0.4,labels=colnames(Y)[i],pos=4,cex=1.5,xpd=NA)
j <- j+1
}
pdf(file=paste0(resultsPath,"time_series.pdf"),width=12,height=8)
par(mfrow=c(1,3),
mar=c(1,2,0,1),
oma = c(1, 1, 1,1))
ylabel <- expression("Pre-fishery run biomass, " ~ 10^{3} ~ " mt")
row.level <- 7
ylimits <- c(0.5,row.level+0.5)
range.lim <- c(-3,4.5)
for(i in 1:n){
if(i==1|i==(row.level+1)|i==(row.level*2+1)|i==(row.level*3+1)){
plot(x=1:nrow(Y),ylab=NA,
xlab=NA,ylim=ylimits,
xlim=years,type="n",
xaxs="i",yaxs="i",bty="n",yaxt="n",xaxt="n")
#axis(2,at=ylimits,labels=NA)
par(mgp=c(1, 0.5, 0))
abline(v=2012)
axis(1,at=c(seq(years[1],years[2],by=5),2017),labels=TRUE,tcl=-0.25,las=1,cex.axis=1.2)
j <- 1
}
y1 <- (Y[,i]-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
minus1.sd <- (-1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
mean.value <- (-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
plus1.sd <- (1-range.lim[1])/(range.lim[2]-range.lim[1])-0.5+j
segments(1980,minus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,minus1.sd,1980,minus1.sd,lwd=0.8,col="grey50",xpd=NA)
segments(1979.5,plus1.sd,1980,plus1.sd,lwd=0.8,col="grey50",xpd=NA)
text(x=1979,y=minus1.sd,labels="-1",adj=c(1,1),cex=1.2,xpd=NA)
text(x=1979,y=plus1.sd,labels="+1",adj=c(1,0),cex=1.2,xpd=NA)
abline(h=mean.value,lty=2,lwd=0.8,col="grey50")
line.color <- ifelse(match.with.process[i]=="Mortality","blue",
ifelse(match.with.process[i]=="Recruitment","firebrick1",
"purple"))
lines(years[1]:years[2], y1, type = "l", lty=1,lwd = 2,col=line.color)
points(years[1]:years[2], y1, pch=21, cex=0.6, lwd=1,col=line.color,bg="white",xpd=NA)
text(x=1979,y=j+0.4,labels=colnames(Y)[i],pos=4,cex=1.5,xpd=NA)
j <- j+1
}
dev.off()
3.75/19
library(ggfortify)
library(dplyr)
library(tidyr)
library(ggplot2)
setwd(here::here())
covariates <- read.csv("covariates.csv",stringsAsFactors = FALSE,header=TRUE)
covariates[covariates==-9] <- NA
#acf(covariates$Summer.Humpbacks.,na.action=na.pass)$acf[,,1]
covariates <- reshape::melt(covariates,id.vars="Year")
covariate_acf <- covariates %>% group_by(variable) %>%
do(data.frame(acf_vals=acf(.$value,plot=FALSE,na.action=na.pass)$acf[,,1])) %>%
mutate(lag=row_number()-1)
setwd(here::here())
here::here()
covariates <- read.csv("data/covariates.csv",stringsAsFactors = FALSE,header=TRUE)
covariates[covariates==-9] <- NA
covariates <- reshape::melt(covariates,id.vars="Year")
covariate_acf <- covariates %>% group_by(variable) %>%
do(data.frame(acf_vals=acf(.$value,plot=FALSE,na.action=na.pass)$acf[,,1])) %>%
mutate(lag=row_number()-1)
df_ci <- covariates %>%
group_by(variable) %>%
summarise(ci = qnorm((1 + 0.95)/2)/sqrt(sum(!is.na(value))))
ggplot(covariate_acf, aes(x=lag, y=acf_vals)) +
geom_bar(stat="identity", size=2) +
geom_hline(yintercept = 0) +
geom_hline(data = df_ci, aes(yintercept = -ci), color="blue", linetype="dotted") +
geom_hline(data = df_ci, aes(yintercept = ci), color="blue", linetype="dotted") +
labs(x="Lag", y="ACF") +
theme_minimal() +
facet_wrap(~variable)
View(covariates)
test <- covariates %>% filter(variable=="total.pink.salmons") %>%
do(data.frame(acf_vals=acf(.$value,plot=FALSE,na.action=na.pass)$acf[,,1])) %>%
mutate(lag=row_number()-1)
test <- covariates %>% filter(variable=="total.pink.salmons")
View(test)
test <- covariates %>% filter(variable=="Total.adult.pinks")
View(test)
View(covariates)
View(covariate_acf)
test <- covariates %>% filter(variable=="Total.adult.pinks.")
View(test)
test <- covariates %>% filter(variable=="Total.adult.pinks.") %>%
filter(Year>=2007) %>%s
test <- covariates %>% filter(variable=="Total.adult.pinks.") %>%
filter(Year>=2007) %>%
do(data.frame(acf_vals=acf(.$value,plot=FALSE,na.action=na.pass)$acf[,,1])) %>%
mutate(lag=row_number()-1)
View(test)
View(covariate_acf)
list(1,2,3,4,5:6)
trial <- list(1,2,3,4,5:6)
is.null(trial)
trial <- list(1,2,3,4,all_disease=5:6)
trial
trial <- list(1,2,3,4,"all disease"=5:6)
trial
unlist(trial)
trial_2 <- unlist(trial)
trial_2[1]
typeof(trial_2[1])
typeof(trial_2)
trial <- list(single=4:12,'All Disease'=1:3)
trial$single
A <-1:4
A %in% 1
A == 1
which(A %in% 1)
names(trial)
hyp <- 'All Disease'
hypothesis <- 'All Disease'
H.select <- trial
H.select$hypothesis
H.select[[hypothesis]]
290/60
length(H.select)
B$test <- 1:3
0.0025*3000
0.0025*5000
0.03*67000
67/12
6000*0.0025
